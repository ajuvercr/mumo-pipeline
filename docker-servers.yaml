services:
  kafka:
    image: apache/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  init-kafka:
    image: apache/kafka:3.8.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    links:
      - kafka
    command: |
      "
      cd /opt/kafka/bin/
      sleep 5
      echo 'I m here, lets try this'
      # blocks until kafka is reachable
      ./kafka-topics.sh  --bootstrap-server kafka:19092 --list

      echo -e 'Creating kafka topics'
      ./kafka-topics.sh  --bootstrap-server kafka:19092 --create --if-not-exists --topic mumo --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      ./kafka-topics.sh  --bootstrap-server kafka:19092 --list
      "
  redis-ldes:
    image: redis/redis-stack-server:latest
    # Don't attach a volume, as we do not want the data to persist between benchmark runs
    #volumes:
    #  - ./redis-data:/data
    #ports:
    #  - 6379:6379
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - '6377:6379'

  redis-nodes:
    image: redis/redis-stack-server:latest
    # Don't attach a volume, as we do not want the data to persist between benchmark runs
    #volumes:
    #  - ./redis-data:/data
    #ports:
    #  - 6379:6379
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - '6378:6379'

